{
  "address": "0x9a587Fd2b2Ef435a081469Bdca5802Cb4149e341",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_initialAnswer",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "authoriseDataProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorisedDataProviders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        }
      ],
      "name": "setData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x2dc6c18fafce1d4a6a5e1b86abce1ab88ff00da2b0e731878963eea7e440f0fb",
  "receipt": {
    "to": null,
    "from": "0x4ec0dda0430A54b4796109913545F715B2d89F34",
    "contractAddress": "0x9a587Fd2b2Ef435a081469Bdca5802Cb4149e341",
    "transactionIndex": 1,
    "gasUsed": "820394",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9a7ebd4e8a6bdcb1cfcf500e72bebbea596b3a4d25c91f115373819b804d1abe",
    "transactionHash": "0x2dc6c18fafce1d4a6a5e1b86abce1ab88ff00da2b0e731878963eea7e440f0fb",
    "logs": [],
    "blockNumber": 407903,
    "cumulativeGasUsed": "820394",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "USDT",
    "100000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "4a0b586abccd79f5a98eb2098afe02c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"authoriseDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorisedDataProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainlinkMockOracle.sol\":\"ChainlinkMockOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/ChainlinkMockOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract ChainlinkMockOracle is AggregatorV3Interface {\\n    struct Round {\\n        int256 answer;\\n        uint256 startedAt;\\n        uint256 updatedAt;\\n        uint80 answeredInRound;\\n    }\\n    Round[] _rounds;\\n    string public description;\\n    mapping(address => bool) public authorisedDataProviders;\\n\\n    constructor(string memory _description, int256 _initialAnswer) {\\n        description = _description;\\n        authoriseDataProvider(msg.sender, true);\\n        setData(_initialAnswer);\\n    }\\n\\n    function setData(int answer) public {\\n        require(\\n            authorisedDataProviders[msg.sender],\\n            \\\"Not authorised data provider\\\"\\n        );\\n        _rounds.push(\\n            Round({\\n                answer: answer,\\n                startedAt: block.timestamp,\\n                updatedAt: block.timestamp,\\n                answeredInRound: uint80(_rounds.length)\\n            })\\n        );\\n    }\\n\\n    function authoriseDataProvider(address provider, bool status) public {\\n        authorisedDataProviders[provider] = status;\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return 8;\\n    }\\n\\n    function version() external pure returns (uint256) {\\n        return 0;\\n    }\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        public\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        )\\n    {\\n        if (_rounds.length == 0 || _rounds.length < _roundId) {\\n            revert(\\\"No data present\\\");\\n        }\\n\\n        Round memory _round = _rounds[_roundId];\\n        return (\\n            _roundId,\\n            _round.answer,\\n            _round.startedAt,\\n            _round.updatedAt,\\n            _round.answeredInRound\\n        );\\n    }\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        )\\n    {\\n        return getRoundData(uint80(_rounds.length - 1));\\n    }\\n}\\n\",\"keccak256\":\"0x8e10046ff711507c0041bc177cd0dce1e55316edfdd682c8da426155bdb9a751\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012f1380380620012f18339818101604052810190620000379190620003e0565b816001908162000048919062000691565b506200005c3360016200007560201b60201c565b6200006d81620000d060201b60201c565b5050620007fb565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200015f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015690620007d9565b60405180910390fd5b6000604051806080016040528083815260200142815260200142815260200160008054905069ffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200027b8262000230565b810181811067ffffffffffffffff821117156200029d576200029c62000241565b5b80604052505050565b6000620002b262000212565b9050620002c0828262000270565b919050565b600067ffffffffffffffff821115620002e357620002e262000241565b5b620002ee8262000230565b9050602081019050919050565b60005b838110156200031b578082015181840152602081019050620002fe565b60008484015250505050565b60006200033e6200033884620002c5565b620002a6565b9050828152602081018484840111156200035d576200035c6200022b565b5b6200036a848285620002fb565b509392505050565b600082601f8301126200038a576200038962000226565b5b81516200039c84826020860162000327565b91505092915050565b6000819050919050565b620003ba81620003a5565b8114620003c657600080fd5b50565b600081519050620003da81620003af565b92915050565b60008060408385031215620003fa57620003f96200021c565b5b600083015167ffffffffffffffff8111156200041b576200041a62000221565b5b620004298582860162000372565b92505060206200043c85828601620003c9565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049957607f821691505b602082108103620004af57620004ae62000451565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004da565b620005258683620004da565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005726200056c62000566846200053d565b62000547565b6200053d565b9050919050565b6000819050919050565b6200058e8362000551565b620005a66200059d8262000579565b848454620004e7565b825550505050565b600090565b620005bd620005ae565b620005ca81848462000583565b505050565b5b81811015620005f257620005e6600082620005b3565b600181019050620005d0565b5050565b601f82111562000641576200060b81620004b5565b6200061684620004ca565b8101602085101562000626578190505b6200063e6200063585620004ca565b830182620005cf565b50505b505050565b600082821c905092915050565b6000620006666000198460080262000646565b1980831691505092915050565b600062000681838362000653565b9150826002028217905092915050565b6200069c8262000446565b67ffffffffffffffff811115620006b857620006b762000241565b5b620006c4825462000480565b620006d1828285620005f6565b600060209050601f831160018114620007095760008415620006f4578287015190505b62000700858262000673565b86555062000770565b601f1984166200071986620004b5565b60005b8281101562000743578489015182556001820191506020850194506020810190506200071c565b868310156200076357848901516200075f601f89168262000653565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f4e6f7420617574686f726973656420646174612070726f766964657200000000600082015250565b6000620007c1601c8362000778565b9150620007ce8262000789565b602082019050919050565b60006020820190508181036000830152620007f481620007b2565b9050919050565b610ae6806200080b6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639a6fc8f51161005b5780639a6fc8f514610117578063da358a3c1461014b578063dfb2853c14610167578063feaf968c1461018357610088565b8063313ce5671461008d57806354fd4d50146100ab5780637238845a146100c95780637284e416146100f9575b600080fd5b6100956101a5565b6040516100a29190610570565b60405180910390f35b6100b36101ae565b6040516100c091906105a4565b60405180910390f35b6100e360048036038101906100de9190610622565b6101b3565b6040516100f0919061066a565b60405180910390f35b6101016101d3565b60405161010e9190610715565b60405180910390f35b610131600480360381019061012c9190610779565b610261565b6040516101429594939291906107ce565b60405180910390f35b6101656004803603810190610160919061084d565b610387565b005b610181600480360381019061017c91906108a6565b6104c6565b005b61018b610521565b60405161019c9594939291906107ce565b60405180910390f35b60006008905090565b600090565b60026020528060005260406000206000915054906101000a900460ff1681565b600180546101e090610915565b80601f016020809104026020016040519081016040528092919081815260200182805461020c90610915565b80156102595780601f1061022e57610100808354040283529160200191610259565b820191906000526020600020905b81548152906001019060200180831161023c57829003601f168201915b505050505081565b600080600080600080600080549050148061028c57508569ffffffffffffffffffff16600080549050105b156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390610992565b60405180910390fd5b6000808769ffffffffffffffffffff16815481106102ed576102ec6109b2565b5b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1669ffffffffffffffffffff16815250509050868160000151826020015183604001518460600151955095509550955095505091939590929450565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610a2d565b60405180910390fd5b6000604051806080016040528083815260200142815260200142815260200160008054905069ffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000806000806000610543600160008054905061053e9190610a7c565b610261565b945094509450945094509091929394565b600060ff82169050919050565b61056a81610554565b82525050565b60006020820190506105856000830184610561565b92915050565b6000819050919050565b61059e8161058b565b82525050565b60006020820190506105b96000830184610595565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ef826105c4565b9050919050565b6105ff816105e4565b811461060a57600080fd5b50565b60008135905061061c816105f6565b92915050565b600060208284031215610638576106376105bf565b5b60006106468482850161060d565b91505092915050565b60008115159050919050565b6106648161064f565b82525050565b600060208201905061067f600083018461065b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106bf5780820151818401526020810190506106a4565b60008484015250505050565b6000601f19601f8301169050919050565b60006106e782610685565b6106f18185610690565b93506107018185602086016106a1565b61070a816106cb565b840191505092915050565b6000602082019050818103600083015261072f81846106dc565b905092915050565b600069ffffffffffffffffffff82169050919050565b61075681610737565b811461076157600080fd5b50565b6000813590506107738161074d565b92915050565b60006020828403121561078f5761078e6105bf565b5b600061079d84828501610764565b91505092915050565b6107af81610737565b82525050565b6000819050919050565b6107c8816107b5565b82525050565b600060a0820190506107e360008301886107a6565b6107f060208301876107bf565b6107fd6040830186610595565b61080a6060830185610595565b61081760808301846107a6565b9695505050505050565b61082a816107b5565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b600060208284031215610863576108626105bf565b5b600061087184828501610838565b91505092915050565b6108838161064f565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b600080604083850312156108bd576108bc6105bf565b5b60006108cb8582860161060d565b92505060206108dc85828601610891565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061092d57607f821691505b6020821081036109405761093f6108e6565b5b50919050565b7f4e6f20646174612070726573656e740000000000000000000000000000000000600082015250565b600061097c600f83610690565b915061098782610946565b602082019050919050565b600060208201905081810360008301526109ab8161096f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420617574686f726973656420646174612070726f766964657200000000600082015250565b6000610a17601c83610690565b9150610a22826109e1565b602082019050919050565b60006020820190508181036000830152610a4681610a0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a878261058b565b9150610a928361058b565b9250828203905081811115610aaa57610aa9610a4d565b5b9291505056fea2646970667358221220962d02e8cfd11ca5a7e437f5f53e744a9bad08cbafa6bb2eda49ed7cf6911aac64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80639a6fc8f51161005b5780639a6fc8f514610117578063da358a3c1461014b578063dfb2853c14610167578063feaf968c1461018357610088565b8063313ce5671461008d57806354fd4d50146100ab5780637238845a146100c95780637284e416146100f9575b600080fd5b6100956101a5565b6040516100a29190610570565b60405180910390f35b6100b36101ae565b6040516100c091906105a4565b60405180910390f35b6100e360048036038101906100de9190610622565b6101b3565b6040516100f0919061066a565b60405180910390f35b6101016101d3565b60405161010e9190610715565b60405180910390f35b610131600480360381019061012c9190610779565b610261565b6040516101429594939291906107ce565b60405180910390f35b6101656004803603810190610160919061084d565b610387565b005b610181600480360381019061017c91906108a6565b6104c6565b005b61018b610521565b60405161019c9594939291906107ce565b60405180910390f35b60006008905090565b600090565b60026020528060005260406000206000915054906101000a900460ff1681565b600180546101e090610915565b80601f016020809104026020016040519081016040528092919081815260200182805461020c90610915565b80156102595780601f1061022e57610100808354040283529160200191610259565b820191906000526020600020905b81548152906001019060200180831161023c57829003601f168201915b505050505081565b600080600080600080600080549050148061028c57508569ffffffffffffffffffff16600080549050105b156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390610992565b60405180910390fd5b6000808769ffffffffffffffffffff16815481106102ed576102ec6109b2565b5b90600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1669ffffffffffffffffffff16815250509050868160000151826020015183604001518460600151955095509550955095505091939590929450565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610a2d565b60405180910390fd5b6000604051806080016040528083815260200142815260200142815260200160008054905069ffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000806000806000610543600160008054905061053e9190610a7c565b610261565b945094509450945094509091929394565b600060ff82169050919050565b61056a81610554565b82525050565b60006020820190506105856000830184610561565b92915050565b6000819050919050565b61059e8161058b565b82525050565b60006020820190506105b96000830184610595565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ef826105c4565b9050919050565b6105ff816105e4565b811461060a57600080fd5b50565b60008135905061061c816105f6565b92915050565b600060208284031215610638576106376105bf565b5b60006106468482850161060d565b91505092915050565b60008115159050919050565b6106648161064f565b82525050565b600060208201905061067f600083018461065b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106bf5780820151818401526020810190506106a4565b60008484015250505050565b6000601f19601f8301169050919050565b60006106e782610685565b6106f18185610690565b93506107018185602086016106a1565b61070a816106cb565b840191505092915050565b6000602082019050818103600083015261072f81846106dc565b905092915050565b600069ffffffffffffffffffff82169050919050565b61075681610737565b811461076157600080fd5b50565b6000813590506107738161074d565b92915050565b60006020828403121561078f5761078e6105bf565b5b600061079d84828501610764565b91505092915050565b6107af81610737565b82525050565b6000819050919050565b6107c8816107b5565b82525050565b600060a0820190506107e360008301886107a6565b6107f060208301876107bf565b6107fd6040830186610595565b61080a6060830185610595565b61081760808301846107a6565b9695505050505050565b61082a816107b5565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b600060208284031215610863576108626105bf565b5b600061087184828501610838565b91505092915050565b6108838161064f565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b600080604083850312156108bd576108bc6105bf565b5b60006108cb8582860161060d565b92505060206108dc85828601610891565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061092d57607f821691505b6020821081036109405761093f6108e6565b5b50919050565b7f4e6f20646174612070726573656e740000000000000000000000000000000000600082015250565b600061097c600f83610690565b915061098782610946565b602082019050919050565b600060208201905081810360008301526109ab8161096f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420617574686f726973656420646174612070726f766964657200000000600082015250565b6000610a17601c83610690565b9150610a22826109e1565b602082019050919050565b60006020820190508181036000830152610a4681610a0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a878261058b565b9150610a928361058b565b9250828203905081811115610aaa57610aa9610a4d565b5b9291505056fea2646970667358221220962d02e8cfd11ca5a7e437f5f53e744a9bad08cbafa6bb2eda49ed7cf6911aac64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
        "label": "_rounds",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Round)60_storage)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
        "label": "description",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
        "label": "authorisedDataProviders",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Round)60_storage)dyn_storage": {
        "base": "t_struct(Round)60_storage",
        "encoding": "dynamic_array",
        "label": "struct ChainlinkMockOracle.Round[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Round)60_storage": {
        "encoding": "inplace",
        "label": "struct ChainlinkMockOracle.Round",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
            "label": "answer",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 55,
            "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
            "label": "startedAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 57,
            "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
            "label": "updatedAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 59,
            "contract": "contracts/ChainlinkMockOracle.sol:ChainlinkMockOracle",
            "label": "answeredInRound",
            "offset": 0,
            "slot": "3",
            "type": "t_uint80"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint80": {
        "encoding": "inplace",
        "label": "uint80",
        "numberOfBytes": "10"
      }
    }
  }
}